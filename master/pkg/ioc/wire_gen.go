// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/gin-gonic/gin"
	"go-job/master/api"
	"go-job/master/database"
	"go-job/master/pkg/middleware"
	"go-job/master/repo"
	"go-job/master/router"
	"go-job/master/service"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitWebServer() *WebContainer {
	v := middleware.NewGinMiddlewares()
	db := database.NewMySQLWithGORM()
	iJobRepo := repo.NewJobRepo(db)
	iNodeRepo := repo.NewNodeRepo(db)
	iJobService := service.NewJobService(iJobRepo, iNodeRepo)
	jobApi := api.NewJobApi(iJobService)
	iJobRecordRepo := repo.NewJobRecordRepo(db)
	iJobRecordService := service.NewJobRecordService(iJobRecordRepo)
	jobRecordApi := api.NewJobRecordApi(iJobRecordService)
	iNodeService := service.NewNodeService(iNodeRepo, iJobRepo)
	nodeApi := api.NewNodeApi(iNodeService)
	iUserRepo := repo.NewUserRepo(db)
	iUserService := service.NewUserService(iUserRepo)
	userApi := api.NewUserApi(iUserService)
	engine := router.NewWebRouter(v, jobApi, jobRecordApi, nodeApi, userApi)
	webContainer := &WebContainer{
		Engine:  engine,
		MysqlDB: db,
		JobSvc:  iJobService,
	}
	return webContainer
}

// wire.go:

type WebContainer struct {
	Engine  *gin.Engine
	MysqlDB *gorm.DB
	JobSvc  service.IJobService
}
